plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.example.frontend"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.hsj.frontend"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    def keystorePropertiesFile = file("C:/Users/SSAFY/Desktop/GitDesktop/Mafia/Frontend/android/app/key.properties")
    def keystoreProperties = [:]

    if (keystorePropertiesFile.exists()) {
        keystorePropertiesFile.withReader { reader ->
            reader.eachLine { line ->
                def (key, value) = line.split('=')
                keystoreProperties[key.trim()] = value.trim()
            }
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']

            // 디버그 메시지 추가: storeFile 경로 출력
            println("Keystore storeFile path: " + keystoreProperties['storeFile'])

            // storeFile 경로가 null인지 또는 빈 문자열인지 확인
            if (keystoreProperties['storeFile'] != null && !keystoreProperties['storeFile'].trim().isEmpty()) {
                storeFile file(keystoreProperties['storeFile'])
            } else {
                error("Keystore file path is missing or invalid in key.properties.")
            }

            storePassword keystoreProperties['storePassword']
        }
    }






    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
        }
    }
}

flutter {
    source = "../.."
}
